@mixin respond-to($class) {
	@if $class == xs {
		@media (max-width: 767px) { @content; }
	}

	@else if $class == sm {
		@media (min-width: 768px) { @content; }
	}

	@else if $class == md {
		@media (max-width: 1000px) { @content; }
	}

	@else if $class == lg {
		@media (max-width: 1200px) { @content; }
	}

	@else {
		@warn "respond-to mixin supports: xs, sm, md, lg";
	}
}

@mixin linx($link, $visit, $hover, $active) {
	a {
		color: $link;
		&:link {
			color: $link;
		}
		&:visited {
			color: $visit;
		}
		&:hover {
			color: $hover;
		}
		&:active {
			color: $active;
		}
	}
}

@mixin transition($transition...) {
	-moz-transition:    $transition;
	-o-transition:      $transition;
	-webkit-transition: $transition;
	transition:         $transition;
}
@mixin transition-property($property...) {
	-moz-transition-property:    $property;
	-o-transition-property:      $property;
	-webkit-transition-property: $property;
	transition-property:         $property;
}
@mixin transition-duration($duration...) {
	-moz-transition-duration:    $duration;
	-o-transition-duration:      $duration;
	-webkit-transition-duration: $duration;
	transition-duration:         $duration;
}

@mixin font-menu-small($color) {
	font-family:  $font-menu;
	font-size:    $font-small;
	color:        $color;
}

@mixin font-menu-medium($color) {
	font-family:  $font-menu;
	font-size:    $font-medium;
	color:        $color;
}

@mixin font-menu-large($color) {
	font-family: $font-menu;
	font-size:   $font-large;
	color:       $color;
}

@mixin font-content-small($color) {
  font-family:  $font-content;
  font-size:    $font-small;
  color:        $color;
}

@mixin font-content-medium($color) {
  font-family:  $font-content;
  font-size:    $font-medium;
  color:        $color;
}

@mixin font-content-large($color) {
  font-family: $font-content;
  font-size:   $font-large;
  color:       $color;
}

@mixin radius($radius...) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($color, $box-shadow...) {
  -moz-box-shadow: $box-shadow $color;
  -webkit-box-shadow: $box-shadow $color;
  box-shadow: inset $box-shadow $color;
}

